--  check every method uses @null/@non-null descriptors as old project
--  check if methods are reusable
--  check sonar
--  add javadoc
--  \n for each log
--  always call local methods without class name before
--  distinguish between fixedversion and List fixedversions -> we will set it inside ticket cleaner
--  check everything is rewritten as in old project
--  do some test cases

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

--  rewrite all old classes
-- migrate methods to lightweight JiraScraper class
-- use @NonNull/@Nullable annotations also in other classes
-- change profile on laptop of intellij to use @NonNull/@Nullable annotations or maybe synchronize.
-- check the csv has all expected fields

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

-- JiraScraper is now ok, but we will need to raise reuse of methods and improve all null checks
                (reading the flow of the code, when the class should raise an exception or continue the flow)
-- in JiraScraper some logic is not consistent, sometimes empty list raise an exception, sometimes not.
-- JiraScraper could be improved by a better handling of empty lists or null values. sometimes is better to return empty/null
                values with a warning log then throws exceptions.
-- think about that method called should be implemented with generalized logic.
-- This is more about future improvements, also after the exam itself.

-- HOW TO IMPROVE JIRA SCRAPER: 1. Make all methods generic, so they can handle empty or null values gracefully and return accordingly.
                                2. Find reusable methods and move them to a common class.
                                3. Check again the logic

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

--  rearrange classes spaces
--  TODOS -> use them, add new ones based on this txt, and finally work on them
--  Now we make all methods generic and able to handle null values gracefully.
                                nex we will look for param check before calling methods in JiraScraper. and logic check
-- rename methods
-- we could add versions with no info
-- check checks of tickets method according to handle null values gracefully.

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

check all new classes has methods logically grouped
check logic class by class for null check and params

